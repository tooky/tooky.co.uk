<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Steve Tooke - coderetreat</title>
  <id>http://tooky.co.uk/</id>
  <link href="http://tooky.co.uk/tags/coderetreat/"/>
  <link href="http://tooky.co.uk/tags/coderetreat.xml" rel="self"/>
  <updated>2010-03-17T00:00:00Z</updated>
  <entry>
    <title>Why I think you should go to a code retreat</title>
    <link rel="alternate" href="http://tooky.co.uk/why-i-think-you-should-go-to-a-coderetreat/"/>
    <id>http://tooky.co.uk/why-i-think-you-should-go-to-a-coderetreat/</id>
    <published>2010-03-17T00:00:00Z</published>
    <updated>2013-12-18T10:29:53+00:00</updated>
    <author>
      <name>Steve Tooke</name>
    </author>
    <content type="html">&lt;p&gt;Last Saturday I went along to the UK leg of &lt;a href="http://coreyhaines.com/"&gt;Corey Haines&lt;/a&gt; &lt;a href="http://www.coderetreat.com/how-it-works.html"&gt;Code Retreat tour&lt;/a&gt;. Apart from the early start it was a really interesting day, and I really enjoyed the chance to &lt;a href="http://twitter.com/despo"&gt;pair&lt;/a&gt; &lt;a href="http://twitter.com/morty_uk"&gt;with&lt;/a&gt; &lt;a href="http://twitter.com/duncanbutler"&gt;lots&lt;/a&gt; of new people.&lt;/p&gt;

&lt;p&gt;The day was pretty tiring, pairing is always an intense experience, but I definitely learnt quite a lot. Its amazing how much fun working on the same problem several times in a row is, and how different approaches affect the way you think about it. By repeating the problem you allow your brain to concentrate on how you are solving it, rather than the problem itself. This gives you a really different perspective and is something I want to explore more.&lt;/p&gt;

&lt;p&gt;There were so many things that I took away from the day, some of them are already changing my approach to building software:&lt;/p&gt;

&lt;h3&gt;45 minutes is a really short amount of time&lt;/h3&gt;

&lt;p&gt;The format of the code retreat is to work on the problem with a pair for 45 minutes. When the time is up, you delete all your code, and take break. Spend 15 minutes grabbing a coffee, reflecting on what you&amp;rsquo;ve done, and finding your next pair. Rinse and repeat.&lt;/p&gt;

&lt;p&gt;Every 45 minute session flew by. Even so, with each pairing I was surprised at how far we&amp;rsquo;d managed to get. But what really surprised me, was how useful the short break and change of partner proved to be. The break gave you a real chance to reconsider your assumptions. That little bit of perspective was great in kick starting the next session.&lt;/p&gt;

&lt;p&gt;It really surprised me how easy it was to swap pairs. Granted, everybody had been thinking about the same problem. But everyone was using a different approach, and sometimes a different language. The context switching didn&amp;rsquo;t seem to affect anybody. The new combinations brought new ideas and really contributed to the success of the day.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve been trying the &lt;a href="http://www.pomodorotechnique.com/"&gt;pomodoro technique&lt;/a&gt; at work. I know I&amp;rsquo;ve been a bit resistant to stopping when the timer goes. I always feel like I should just get the rest of my ideas out before I take break, but based on my experience at code retreat, I think the short break from the problem will turn out to be a real benefit. I&amp;rsquo;m determined to try and do it properly and see how it works out.&lt;/p&gt;

&lt;p&gt;I also want to try and swap pairs more often. I think that the new perspective a new pair will bring to a problem will really help to come to the best solution.  I&amp;rsquo;m not sure about every hour, but once or twice a day should be achievable.&lt;/p&gt;

&lt;h3&gt;Pairing is a great way to share insights and learning&lt;/h3&gt;

&lt;p&gt;Leading on from the new perspective a new pair brings is also the amount of shared learning that happens when your pairing. I learnt something from everyone I paired with. Not just how to approach the problem, but new things about the language, the tools. In a team, pairing will really help to bring every team member up to speed on any new part of the code base or library added. Switching often will make this happen even faster.&lt;/p&gt;

&lt;h3&gt;If you don&amp;rsquo;t need the infrastructure yet, don&amp;rsquo;t build it&lt;/h3&gt;

&lt;p&gt;Why do you need to build a class to make your first spec pass? Why not just write the code you need in the spec? Then write the next spec, and the code to pass it in that spec. As soon as you start to see shared behaviour extract a method. When specs are using the same state and the same methods extract a class.&lt;/p&gt;

&lt;p&gt;Working like this is &lt;em&gt;really&lt;/em&gt; hard, but its amazing how the design you need just starts to show itself. &lt;/p&gt;

&lt;h3&gt;Look at one behaviour at a time by isolating it using canned responses&lt;/h3&gt;

&lt;p&gt;Most of the code we write doesn&amp;rsquo;t split up nicely into discreet chunks of behaviour. We build systems that rely on several pieces all working together to produce complicated behaviour. Complexity is difficult to define, so to make it easier we need to try to isolate the part that we&amp;rsquo;re interested in right now.  We can use simple objects that return canned responses, this allows us to consider only the behaviour we care about now.&lt;/p&gt;

&lt;h3&gt;Keeping things really simple is really hard&lt;/h3&gt;

&lt;p&gt;Corey was continually encouraging us to keep things simple. Its amazing how often you think your doing something as simply as possible, and then someone comes along and makes it even simpler. Simple is good, it allows you to work on one thing at a time, and not get bogged down in things that don&amp;rsquo;t matter &lt;em&gt;right now&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;A lot of the direction at code retreat was about ways to keep things simple, to specify only the smallest piece of behaviour. Writing the code in the spec at first, and using &amp;lsquo;doubles&amp;rsquo; to isolate behaviour are both great techniques to help you do that.&lt;/p&gt;

&lt;p&gt;One of the main things I&amp;rsquo;m taking away from code retreat is to work hard at writing smaller, more focussed specs.&lt;/p&gt;

&lt;p&gt;If there&amp;rsquo;s a &lt;a href="http://www.coderetreat.com/"&gt;code retreat&lt;/a&gt; near you I really encourage you to go along. If there isn&amp;rsquo;t join the &lt;a href="http://coderetreat.ning.com/"&gt;community&lt;/a&gt; and see if there&amp;rsquo;s anyone else who would be interested in helping get one organised.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d like to say thank you to &lt;a href="http://coreyhaines.com/"&gt;Corey Haines&lt;/a&gt;, the sponsors &lt;a href="http://riverglide.com/"&gt;RiveGlide&lt;/a&gt; and &lt;a href="http://edendevelopment.co.uk/"&gt;Eden Development&lt;/a&gt;, all of the attendees, and of course &lt;a href="http://www.bletchleypark.org.uk/"&gt;Bletchley Park&lt;/a&gt; and the &lt;a href="http://www.tnmoc.org/"&gt;The National Museum of Computing&lt;/a&gt; for making the day such a great success.&lt;/p&gt;
</content>
  </entry>
</feed>
