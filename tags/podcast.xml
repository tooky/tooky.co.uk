<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Steve Tooke - podcast</title>
  <id>http://tooky.co.uk/</id>
  <link href="http://tooky.co.uk/tags/podcast/"/>
  <link href="http://tooky.co.uk/tags/podcast.xml" rel="self"/>
  <updated>2014-08-21T00:00:00Z</updated>
  <entry>
    <title>Next Kickstart Academy Podcast Show with Liz Keogh and Chris Matts</title>
    <link rel="alternate" href="http://tooky.co.uk/next-kickstart-academy-podcast-show-with-liz-keogh-and-chris-matts/"/>
    <id>http://tooky.co.uk/next-kickstart-academy-podcast-show-with-liz-keogh-and-chris-matts/</id>
    <published>2014-08-21T00:00:00Z</published>
    <updated>2014-09-01T09:10:21+01:00</updated>
    <author>
      <name>Steve Tooke</name>
    </author>
    <content type="html">&lt;p&gt;Our next live Kickstart Academy podcast show will be on Monday, 1st
September at 15:30 BST. We&amp;rsquo;re pleased to welcome back &lt;a href="https://twitter.com/lunivore"&gt;Liz Keogh&lt;/a&gt; and
her invited guest &lt;a href="https://twitter.com/PapaChrisMatts"&gt;Chris Matts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The show will be broadcast live here as well as from the &lt;a href="https://plus.google.com/u/2/b/112947453773806733442/events/ca1jlhcdngrc29v5s96i8f2rdgc"&gt;event
page&lt;/a&gt;. If you have any questions during the show, please use the Q&amp;amp;A
app on the &lt;a href="https://plus.google.com/u/2/b/112947453773806733442/events/ca1jlhcdngrc29v5s96i8f2rdgc"&gt;event page&lt;/a&gt; or tweet us
&lt;a href="https://twitter.com/kickstartac"&gt;@kickstartac&lt;/a&gt;.&lt;/p&gt;

&lt;iframe width="560" height="315" src="//www.youtube.com/embed/VHmjW3qjkLE"
frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
</content>
  </entry>
  <entry>
    <title>Kickstart Academy Podcast with Liz Keogh and Corey Haines</title>
    <link rel="alternate" href="http://tooky.co.uk/kickstart-academy-podcast-with-liz-keogh-and-corey-haines/"/>
    <id>http://tooky.co.uk/kickstart-academy-podcast-with-liz-keogh-and-corey-haines/</id>
    <published>2014-07-31T00:00:00Z</published>
    <updated>2014-07-31T13:00:30+01:00</updated>
    <author>
      <name>Steve Tooke</name>
    </author>
    <content type="html">&lt;p&gt;For the third installment of the Kickstart Academy podcast we were pleased to
have &lt;a href="https://twitter.com/lunivore"&gt;Liz Keogh&lt;/a&gt; join us &amp;mdash; and &lt;a href="https://twitter.com/coreyhaines"&gt;Corey Haines&lt;/a&gt; returned to the
panel for his second appearance.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;We enjoyed having &lt;a href="https://twitter.com/sandimetz"&gt;Sandi Metz&lt;/a&gt; on the panel for the &lt;a href="http://kickstartacademy.io/blog/2014-07-29-kickstart-academy-podcast-with-corey-haines-and-sandi-metz"&gt;last
podcast&lt;/a&gt; so much that we hope to have a running theme of inviting
the previous guest back to the following show â€“ in a similar vein to BBC Radio
4&amp;rsquo;s &lt;a href="http://en.wikipedia.org/wiki/Chain_Reaction_%28radio%29"&gt;Chain Reaction&lt;/a&gt;.&lt;/p&gt;

&lt;iframe width="560" height="315" src="//www.youtube.com/embed/_hKO-AVjCJM"
frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;There is an &lt;a href="https://dl.dropboxusercontent.com/u/41915/kickstart-academy-podcast/003-liz-keogh-and-corey-haines.mp3"&gt;audio version of this podcast available here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Show Notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;[0:01:39] Liz&amp;rsquo;s backstory&lt;/li&gt;
&lt;li&gt;[0:04:17] Define &lt;a href="http://en.wikipedia.org/wiki/Cynefin"&gt;Cynefin&lt;/a&gt; - a sense making framework

&lt;ul&gt;
&lt;li&gt;Simple/Obvious - children can solve it&lt;/li&gt;
&lt;li&gt;Requires expertise - watchmaker&lt;/li&gt;
&lt;li&gt;Complex - not predictable outcomes&lt;/li&gt;
&lt;li&gt;Chaos - accident and emergency&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:08:30] Software development approaches within the different cynefin domains

&lt;ul&gt;
&lt;li&gt;Commoditised requirements vs Differentiating Requirements&lt;/li&gt;
&lt;li&gt;Chaos - Experiment / Spike / Probe&lt;/li&gt;
&lt;li&gt;Requires expertise - Analyze (e.g. BDD)&lt;/li&gt;
&lt;li&gt;Simple - off the shelf&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:12:25] Capabilities vs Goals

&lt;ul&gt;
&lt;li&gt;Understanding the goal behind the capability&lt;/li&gt;
&lt;li&gt;Which stakeholders are getting the benefit?&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/imtomgilb"&gt;Tom Gilb&lt;/a&gt; - &lt;a href="http://gilb.com/Project-Management"&gt;Evolutionary Project Management&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:16:31] Is BDD a design activity not required for obvious requirements? - &lt;a href="https://twitter.com/mattwynne"&gt;Matt Wynne&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Analyze as simply as possible&lt;/li&gt;
&lt;li&gt;Name the scenarios&lt;/li&gt;
&lt;li&gt;Ask: is there anything different?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:20:40] BDD: automation and regression testing

&lt;ul&gt;
&lt;li&gt;How you set the context with &amp;ldquo;Given&amp;rdquo; doesn&amp;rsquo;t matter&lt;/li&gt;
&lt;li&gt;&amp;ldquo;When&amp;rdquo; is the actual behaviour your interested in&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:22:11] Liz&amp;rsquo;s scale for classifying capabilities

&lt;ul&gt;
&lt;li&gt;5 - nobody in the world has ever done it before&lt;/li&gt;
&lt;li&gt;4 - somebody has done it before but not in this organisation&lt;/li&gt;
&lt;li&gt;3 - somebody in this organisation has done it before, and we need their expertise&lt;/li&gt;
&lt;li&gt;2 - somebody in the team has done it before&lt;/li&gt;
&lt;li&gt;1 - we all know how to do it&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:23:05] When automated scenarios catch a regression bug it&amp;rsquo;s usually because of poor design

&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t just throw more scenarios at it find out why your getting the bugs&lt;/li&gt;
&lt;li&gt;Often because two capabilities are bleeding in to each other&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:25:51] Techniques for talking through capabilities with stakeholders

&lt;ul&gt;
&lt;li&gt;Why are we doing this project?&lt;/li&gt;
&lt;li&gt;Who are we doing it for?&lt;/li&gt;
&lt;li&gt;Can you give me an example?&lt;/li&gt;
&lt;li&gt;What will you be able to do that you can&amp;rsquo;t do now?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:30:44] Focusing on the outcome

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/PapaChrisMatts"&gt;Chris Matts&lt;/a&gt; - &lt;a href="http://theitriskmanager.wordpress.com/2014/07/06/a-tale-of-two-feature-injections-a-cynefin-tale/"&gt;Value Mapping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Assign numbers from Liz&amp;rsquo;s scale to capabilities&lt;/li&gt;
&lt;li&gt;For 1s and 2s, &amp;ldquo;Choose the technology that&amp;rsquo;s easy to change&amp;rdquo; - Chris Matts&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:37:01] Applying BDD at the different levels

&lt;ul&gt;
&lt;li&gt;When outcomes are uncertain, can lead to analysis paralysis&lt;/li&gt;
&lt;li&gt;Often an indicator of 4s and 5s&lt;/li&gt;
&lt;li&gt;So find a way to prototype/experiment&lt;/li&gt;
&lt;li&gt;Listen for the uncertainty&lt;/li&gt;
&lt;li&gt;Listen for the boredom&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:42:05] What is BDD?

&lt;ul&gt;
&lt;li&gt;Not testing tools with BDD mode - &amp;ldquo;should&amp;rdquo; or &amp;ldquo;expect&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Using examples to illustrate behaviour&amp;rdquo; - Liz&lt;/li&gt;
&lt;li&gt;Let dev&amp;rsquo;s write the scenarios, and get feedback from the testers and experts&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tastapod"&gt;Dan North&lt;/a&gt;&amp;rsquo;s &lt;a href="http://en.wikipedia.org/wiki/Behavior-driven_development#History"&gt;definition&lt;/a&gt; true in 2009, maybe not 2010&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s not necessarily high-automation&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s still outside-in&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s still 2nd generation&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s still pull-based&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s still multiple-scale&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s still agile&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s still about getting feedback&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s still a cycle of interactions&lt;/li&gt;
&lt;li&gt;We now respect we can&amp;rsquo;t always get well defined outputs&lt;/li&gt;
&lt;li&gt;It still results in software that matters&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:49:01] Patterns for improving scenarios

&lt;ul&gt;
&lt;li&gt;Just write down what people say&lt;/li&gt;
&lt;li&gt;Have the conversation&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t try to make patterns fit existing steps&lt;/li&gt;
&lt;li&gt;Step away from the tools&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:53:14] How does having theses conversations about the system itself affect the minute-by-minute development process?

&lt;ul&gt;
&lt;li&gt;Leads to more spikes and prototypes, and understanding why to do them?&lt;/li&gt;
&lt;li&gt;Less useful for large organisations where a lot of the work is governed by regulations&lt;/li&gt;
&lt;li&gt;Removes frustrations of things like 4-hour planning meetings&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:55:25] Can you use examples to identify and then test your assumptions?&lt;/li&gt;
&lt;li&gt;[0:57:45] Leveling capabilities

&lt;ul&gt;
&lt;li&gt;Map out the capabilities&lt;/li&gt;
&lt;li&gt;Map the stakeholders - then understand the capailities they are looking for&lt;/li&gt;
&lt;li&gt;Try estimating them using relative sizes&lt;/li&gt;
&lt;li&gt;Find the capabilities that are new&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[1:00:33] Liz&amp;rsquo;s Fantasy Fiction

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://leanpub.com/silversongchild"&gt;The Silversong Child&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leanpub.com/nightingalethrone"&gt;The Nightingale Throne&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;High-level fantasy - a bit like Game of Thrones, with less killings and more magic&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[1:01:40] How do you guard against new adopters of BDD from just rewriting existing requirements with new words, e.g. should, then, describe, expect - &lt;a href="https://twitter.com/kerryb"&gt;Kerry Buckley&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://vimeo.com/75923366"&gt;What is the value of Social Capital? - Jabe Bloom&lt;/a&gt; - &lt;a href="https://twitter.com/cyetain"&gt;Jabe Bloom&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Kickstart Academy Podcast with Corey Haines and Sandi Metz</title>
    <link rel="alternate" href="http://tooky.co.uk/kickstart-academy-podcast-with-corey-haines-and-sandi-metz/"/>
    <id>http://tooky.co.uk/kickstart-academy-podcast-with-corey-haines-and-sandi-metz/</id>
    <published>2014-07-29T00:00:00Z</published>
    <updated>2014-07-29T11:25:30+01:00</updated>
    <author>
      <name>Steve Tooke</name>
    </author>
    <content type="html">&lt;p&gt;Last month we broadcast our 2nd live podcast. We were fortunate to be joined by
&lt;a href="https://twitter.com/coreyhaines"&gt;Corey Haines&lt;/a&gt; &amp;mdash; to discuss simple design &amp;mdash; and by &lt;a href="https://twitter.com/sandimetz/"&gt;Sandi
Metz&lt;/a&gt; &amp;mdash; who was kind enough to return for a second show.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;iframe width="560" height="315" src="//www.youtube.com/embed/BT7MYd07OFw"
frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;There is an &lt;a href="http://bit.ly/1lR4AsO"&gt;audio version of this podcast available here&lt;/a&gt; - but due to the nature
of the live code examples on the video version that is probably the better
experience.&lt;/p&gt;

&lt;h2&gt;Show Notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;[0:02:20] &amp;mdash; 4 rules of simple design

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/kentbeck"&gt;Kent Beck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Design that is easier to change&amp;rdquo; - Corey&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jbrains.ca/permalink/the-four-elements-of-simple-design"&gt;Four elements of simple design&lt;/a&gt; &amp;mdash; &lt;a href="https://twitter.com/jbrains"&gt;J. B. Rainsberger&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:6:11] &amp;mdash; &lt;a href="https://leanpub.com/4rulesofsimpledesign"&gt;Understanding the 4 Rules of Simple Design&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://coderetreat.org/"&gt;Code Retreat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sandi doesn&amp;rsquo;t hate Corey&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:10:17] Understanding Testing Book

&lt;ul&gt;
&lt;li&gt;What can you learn from writing your own assert method?&lt;/li&gt;
&lt;li&gt;All testing frameworks bring baggage with them - leaving that aside allows
you to understand the fundamentals&lt;/li&gt;
&lt;li&gt;Do you start with &lt;code&gt;assert&lt;/code&gt; or &lt;code&gt;assert_true&lt;/code&gt; ?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:19:55] Writing your own assert method demo

&lt;ul&gt;
&lt;li&gt;(apologies about the sound cutting in and out, Hangouts appears to mute
typing)&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Fundamentally testing is about checking that two things are the same&amp;rdquo; - Corey&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:30:02] Having rich ways of verifying your system can mask design feedback from simple tests

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.typemock.com/"&gt;TypeMock&lt;/a&gt; for mocking static methods in .NET masked the need to inject dependencies&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:36:00] Only having simple testing features can lead to writing a single method that does everything&lt;/li&gt;
&lt;li&gt;[0:38:10] The tension between learning and getting things out in production

&lt;ul&gt;
&lt;li&gt;Being able to explain the value of the things that you use&lt;/li&gt;
&lt;li&gt;Doing something because smart people say you should do it, and understanding why they do it&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:45:21] What&amp;rsquo;s the best approach to teaching design sense to new programmers?

&lt;ul&gt;
&lt;li&gt;Go back to the mechanical refactoring steps - back to the fundamentals&lt;/li&gt;
&lt;li&gt;&amp;ldquo;refactorings are little machines that produce objects&amp;rdquo; - Sandi&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29"&gt;SOLID&lt;/a&gt; principles are guide points&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[0:54:10] Actionable principles

&lt;ul&gt;
&lt;li&gt;SOLID principles are hard to action, minute-by-minute&lt;/li&gt;
&lt;li&gt;Inner/outer design loops&lt;/li&gt;
&lt;li&gt;&lt;a href="http://industriallogic.com/xp/refactoring/"&gt;Refactoring to Patterns - Joshua Kerievsky&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[01:01:22] Efficient ways of travelling the long road

&lt;ul&gt;
&lt;li&gt;Paying attention to what your doing&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.innovationexcellence.com/blog/2012/10/24/divergent-and-convergent-thinking/"&gt;Divergent/convergent thinking&lt;/a&gt; phases&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Sunk_costs"&gt;Sunk cost fallacy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;[01:04:07] Only ever one undo away from being back to green

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/tooky/a75778f70499af2f9435"&gt;Corey&amp;rsquo;s Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.infoq.com/presentations/The-Limited-Red-Society"&gt;Limited Red Society - Joshua Kerievsky&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vimeo.com/3763583"&gt;Time to Green Graph - Gary Bernhardt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Kickstart Academy Podcast with Sandi Metz</title>
    <link rel="alternate" href="http://tooky.co.uk/kickstart-academy-podcast-with-sandi-metz/"/>
    <id>http://tooky.co.uk/kickstart-academy-podcast-with-sandi-metz/</id>
    <published>2014-05-21T00:00:00Z</published>
    <updated>2014-06-10T07:00:47+01:00</updated>
    <author>
      <name>Steve Tooke</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="https://twitter.com/mattwynne"&gt;Matt&lt;/a&gt;, &lt;a href="https://twitter.com/chrismdp"&gt;Chris&lt;/a&gt; and &lt;a href="https://twitter.com/tooky"&gt;I&lt;/a&gt; were joined yesterday by &lt;a href="https://twitter.com/sandimetz"&gt;Sandi
Metz&lt;/a&gt; for a live google hangout.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;iframe width="560" height="315" src="//www.youtube.com/embed/u-d2v_8YYw4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;You can &lt;a href="https://dl.dropboxusercontent.com/u/41915/kickstart-academy-podcast/001-sandi-metz.mp3"&gt;download an audio only version of the podcsast
here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d like to thank Sandi for giving us her time and her insight!&lt;/p&gt;

&lt;p&gt;We would love to hear any thoughts you have about the show - either about the
content or the format. We&amp;rsquo;re planning to do a live show about once a month, so
if there&amp;rsquo;s anyone you&amp;rsquo;d like us to talk to, or any topics you&amp;rsquo;d like us to cover
please let us know.&lt;/p&gt;

&lt;p&gt;You can email us at &lt;a href="mailto:hello@bddkickstart.com"&gt;hello@bddkickstart.com&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Show notes&lt;/h2&gt;

&lt;p&gt;We all had a lot of fun and covered quite a few topics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/makaroni4/sandi_meter"&gt;The Sandi Meter&lt;/a&gt; and the (don&amp;rsquo;t call them the) &amp;ldquo;Sandi Metz&amp;rdquo; rules&lt;/li&gt;
&lt;li&gt;Small Things&lt;/li&gt;
&lt;li&gt;Letting go of the big picture&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Everything I know now I cargo culted&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Finding the sweet spot between extremes&lt;/li&gt;
&lt;li&gt;Experimenting&lt;/li&gt;
&lt;li&gt;Object-oriented thinking&lt;/li&gt;
&lt;li&gt;Rails and frameworks&lt;/li&gt;
&lt;li&gt;Testability

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/tomstuart"&gt;Tom Stuart&lt;/a&gt; - &lt;a href="http://codon.com/how-testability-can-help"&gt;How testability can help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Open/closed_principle"&gt;Open/Closed Principle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Focus on the messages&lt;/li&gt;
&lt;li&gt;Starting at the whiteboard&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s not &lt;a href="http://geepawhill.org/?p=47"&gt;TDYAR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;End-to-end testing vs isolated testing&lt;/li&gt;
&lt;li&gt;Testing at different levels of granularity&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.thecodewhisperer.com/2014/05/14/the-curious-case-of-tautological-tdd/"&gt;Tautological TDD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TDD and driving desing&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Single_responsibility_principle"&gt;Single Responsibility Principle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Confidence&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kickstartacademy.io/courses/practical-object-oriented-design"&gt;#POODL&lt;/a&gt; - Practical Object Oriented Design classes with Sandi and
Matt in London&lt;/li&gt;
&lt;li&gt;Integration tests and testing roles&lt;/li&gt;
&lt;li&gt;Functional vs Object Oriented

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://elixir-lang.org/"&gt;Elixir&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Microservices Architecture

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/fgeorge52"&gt;Fred George&lt;/a&gt; on &lt;a href="http://oredev.org/2013/wed-fri-conference/implementing-micro-service-architectures"&gt;Microservices Architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Readable code&lt;/li&gt;
&lt;li&gt;Imperative vs Declarative approach&lt;/li&gt;
&lt;li&gt;Tell Don&amp;rsquo;t Ask - What Not How&lt;/li&gt;
&lt;li&gt;&lt;a href="http://signup.practicalrailsbook.com/?lrRef=Ejvoln"&gt;Practical Rails Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;99 Bottles of Beer&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vimeo.com/26330100"&gt;T R U E&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/unclebobmartin"&gt;Uncle Bob Martin&lt;/a&gt; - &lt;a href="http://www.objectmentor.com/resources/articles/Principles_and_Patterns.pdf"&gt;Symptoms of Rotting Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Exemplary Code&lt;/li&gt;
&lt;li&gt;The pattern failed me

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=x1wnI0AxpEU"&gt;All the little things keynote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gilded rose kata&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Code Metrics

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/seattlerb/flog"&gt;Flog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeclimate.com/"&gt;Code Climate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
